# Phase1.cfg - An ld65 linker script which produces several files containing
# code.
#(C)2011,2012 Malcolm Tyrrell (Malcolm.R.Tyrrell@gmail.com)

#This linker script describes the memory layout we want once
#the program has decompressed.
#
#We can't load into all the memory areas, so this phase outputs
#the various areas into files for subsequent processing.
MEMORY {
    LOW1:
	start = $200 - 2,
	size = ($314 - ($200 - 2)),
	type = rw,
	fill = yes,
	file = "low1.bin";
    # This holds the pointers to the interrupts.
    LOW2:
	start = $314,
	size = 6
	type = rw,
	fill = yes,
	file = "low2.bin";
    LOW3:
	start = $31A
	size = ($400 - $31A),
	type = rw,
	fill = no,
	file = "low3.bin";
    RAM:
	# 12 bytes for back buffers
	# 4 byte padding
	# 96 for sprite buffers
	start = $1000 + $190 + (12 * 8) - 2
	size = $2000 - ($1000 + $190 + (12 * 8) - 2)
	type = rw,
	fill = no,
	file = "main.bin";
# The following memory areas are never loaded.
    SCREEN:
	start = $1000,
	size = (19 * 21),
	type = rw,
	fill = no;
    BACKBUFFER:
	start = $0000 + $0F0,
	size = 12,
	type = rw,
	fill = no;
    SPRITEBUFFER:
	start = $1000 + $190
	size = (12 * 8), 
	type = rw,
	fill = no;
    CHRPAGE:
	start = $1000,
	size = $0000,
	type = rw,
	fill = no;
}

SEGMENTS {
    MYCHAR:	load = RAM, type = rw, define = yes, optional = yes;
    CODE:	load = RAM, type = rw, define = yes, optional = yes;
    LEVELDATA:	load = RAM, type = ro, define = yes, optional = yes;
    LOW1:	load = LOW1, type = ro, define = yes, optional = yes;
    LOW2:	load = LOW2, type = ro, define = yes, optional = yes;
    LOW3:	load = LOW3, type = ro, define = yes, optional = yes;

# Not loaded.
    CHRPAGE:	load = CHRPAGE, type = rw, define = yes, optional = yes;
    SCREEN:	load = SCREEN, type = rw, define = yes, optional = yes;
    SPRITEBUFFER:load = SPRITEBUFFER, type = rw, define = yes, optional = yes;
    BACKBUFFER:  load = BACKBUFFER, type = rw, define = yes, optional = yes;
}

FEATURES {
   STARTADDRESS:   default = $0FFF;
}

